---
openapi: 3.0.0
info:
  title: Soccer API
  description: This is our soccer API project
  contact:
    email: naorsu@post.bgu.ac.il
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
paths:
  /auth/register:
    post:
      tags:
      - auth
      summary: add a new user
      description: A json object that contains all user info is added to the data
      requestBody:
        description: User info to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      responses:
        "201":
          description: User has been created
        "409":
          description: Username is already taken

  /auth/login:
    post:
      tags:
      - auth
      summary: login to server
      description: sends user name and password to verify to user cardentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        "200":
          description: |
            User has logged in successfuly and recieved cookie. Also return the user's role list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/role_list'
        "401":
          description: Username or Password incorrect

  /user/logout:
    post:
      tags:
      - auth
      summary: logout from server
      description: deletes user's cookie
      responses:
        "200":
          description: logout succeeded
        "412":
          description: no user is logged in
            
  /user/favorites/matches:
    get:
      tags:
      - user
      summary: get user's favorite matches
      description: return a list of user's favorite future matches
      responses:
        "200":
          description: returns a list of matches succesfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/match'
        "401":
          description: Unauthorized
    put:
      tags:
      - user
      summary: update user's favorite matches
      description: sends match id to append match to user's favorite matches list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/match_id'
        required: true
      responses:
        "200":
          description: The match successfully saved as favorite
        "400":
          description: something went wrong
        "401":
          description: Unauthorized
        "404":
          description: no such match
        "412":
          description: match is already a favorite

  /user/union_representative/assign_referee:
    put:
      tags:
      - union_representative
      summary: assign referee role to an existing user
      description: union repesentative can assign referee role to an existing user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/username'
        required: true
      responses:
        "200":
          description: The role was assigned successfuly
        "403":
          description: User isn't permitted
        "404":
          description: Username was not found
        "412":
          description: user is already referee


  /user/referee/add_score:
    put:
      tags:
      - referee
      summary: add score to an existing match
      description: union repesentative can add score to a match 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/score_prop'
        required: true
      responses:
        "200":
          description: The score was assigned successfuly
        "403":
          description: User isn't permitted
        "404":
          description: match_id was not found

  /user/referee/add_event:
    put:
      tags:
      - referee
      summary: add event to an existing match
      description: union repesentative can add event to a match's log event 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/event_prop'
        required: true
      responses:
        "200":
          description: The event was added successfuly
        "403":
          description: User isn't permitted
        "404":
          description: match_id was not found
  /league/summary:
    get:
      tags:
      - league
      summary: get league current summrized info
      description: returns an json object with current league params
      responses:
        "200":
          description: returns an json object with current league params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/league_params'
        "400":
          description: didnt find available data on league
  /user/union_representative/assign_referee_league:
    put:
      tags:
      - union_representative
      summary: assign referee to an existing league
      description: union repesentative can assign referee role to an existing league
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/username'
        required: true
      responses:
        "200":
          description: The referee was assigned to the league successfuly
        "403":
          description: User isn't permitted
        "404":
          description: The referee's username was not found
        "412":
          description: To assign referee to a league, The user should be already a referee
  /player/page/{player_id}:
    get:
      tags:
      - player
      summary: get player's page
      description: returns a json object with data to fill in the player's page
      parameters:
      - name: player_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: returns a json object with data to fill in the player's page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
        "404":
          description: player id not found
  /team/page/{team_id}:
    get:
      tags:
      - team
      summary: get team's page
      description: returns a json object with data to fill in the team's page
      parameters:
      - name: team_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 211
      responses:
        "200":
          description: returns a json object with data to fill in the team's page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team'
        "404":
          description: team_id not found
  /league/current_fixture:
    get:
      tags:
      - league
      summary: get league current fixture
      description: returns a json object with two arrays- array of pre played matches of the current fixture  and a array of post played matches of the current fixture
      responses:
        "200":
          description: returns a json object with two arrays- array of pre played matches of the current fixture  and a array of post played matches of the current fixture
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pre_post_matches'
        "400":
          description: didnt find avilable data on league
  /user/union_representative/matches/{league_id}:
      get:
        tags:
        - union_representative
        summary: get league season matches
        description: returns a json object with array of all current season matches
        parameters:
          - name: league_id
            in: path
            required: true
            style: simple
            explode: false
            schema:
              type: string
        responses:
          "200":
            description: returns a json object with array of all current season matches
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/season_matches'
          "400":
            description: didnt find available data on league
          "403":
            description: User isn't permitted


  /user/union_representative/match:
    post:
      tags:
      - union_representative
      summary: create a new match
      description: union represatative adds a new match to the league
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/match_prop'
        required: true
      responses:
        "201":
          description: match has been created
        "400":
          description: invalid match day
        "403":
          description: User isn't permitted
        "404":
          description: one of the teams not found or referee not found or referee is not in this league
  
  /search/player:
    get:
      tags:
      - player
      summary: search player
      description: returns a json object with a list of players
      responses:
        "200":
          description: returns a json object with a list of players
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/league_players'
        "404":
          description: season_id not found
  /search/team:
    get:
      tags:
      - team
      summary: search team
      description: returns a json object with a list of teams
      responses:
        "200":
          description: returns a json object with a list of teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/league_teams'
        "404":
          description: season_id not found

components:
  schemas:
    user:
      required:
      - country
      - email
      - firstname
      - lastname
      - password
      - profile_picture
      - username
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: Must have 3-8 characters, letters only
          example: KingMessi
        firstname:
          type: string
          example: May
        lastname:
          type: string
          example: Suban
        country:
          type: string
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: Must have 5-10 characters, should contain at least one digit and one special character
          format: password
          example: my*pass21
        email:
          type: string
          format: email
          example: Suban@gmail.com
        profile picture:
          type: string
          description: Link to the profile image, recommended to add picture from cloudinary
          format: URL
          example: https://res.cloudinary.com/dswkzsdoq/image/upload/v1620738869/20171122_132608_zvrw97.jpg
    event:
      required:
      - date
      - description
      - event_type
      - min_in_game
      type: object
      properties:
        date:
          type: string
          description: The event's date
          format: date
        min_in_game:
          type: string
          description: The minute in the game when the event occured
          example: "12"
        event_type:
          type: string
          description: The type of the event
          example: yellow card
        description:
          type: string
          description: The description of the event
          example: Messi foueled Ronaldo and got a yellow card
    match:
      required:
      - match_id
      - home_team
      - away_team
      - league
      - season
      - stage
      - court
      - referee_name
      - date

      type: object
      properties:
        match_id:
          type: string
          description: unique match id
          example: 1
        home_team:
          type: string
          description: The host team's name
          example: Silkeborg
        away_team:
          type: string
          description: The guest team's name
          example: Midtjylland
        league:
          type: string
          description: league_id
          example: '271'
        season:
          type: string
          description: The season
          example: "2021/2022"
        court:
          type: string
          description: The court's id
          example: "1121"
        stage:
          type: string
          description: The stage's name
          example: "Regular Season"
        referee_name:
          type: string
          description: The referee's name
          example: ref
        date:
          type: string
          description: The match's date
          format: date
          example: "2021-06-05"
        eventlog:
          type: array
          description: The log events of the match
          items:
            $ref: '#/components/schemas/event'
        score:
          type: string
          description: The match's score, (home_team-away_team)
          example: 3-0
    player:
      required:
      - common_name
      - country
      - date_of_birth
      - fullname
      - nationality
      - picture
      - player_id
      - position_num
      - team_name
      type: object
      properties:
        player_id:
          type: string
          description: The player's id
          example: 37418793
        fullname:
          type: string
          description: The player's full name
          example: James Gomez
        team_name:
          type: string
          description: The player's team name
          example: Horsens
        picture:
          type: string
          description: The player's url picture
          example: https://cdn.sportmonks.com/images/soccer/players/9/37418793.png
          format: URL
        position_num:
          type: string
          description: Player's position number
          example: 2
        common_name:
          type: string
          description: The player's common name
          example: J. Gomez
        nationality:
          type: string
          description: The player's nationality
          example: Gambia
        date_of_birth:
          type: string
          description: The player's date of birth
          example: 04/04/1994
          format: date
        country:
          type: string
          description: The player's country
          example: 2507
        height:
          type: string
          description: The player's height
          example: null
        Weight:
          type: string
          description: The player's weight
          example: null
    partial_player:
      required:
      - fullname
      - picture
      - player_id
      - position_num
      - team_name
      type: object
      properties:
        player_id:
          type: string
          description: The player's id
          example: 37418793
        fullname:
          type: string
          description: The player's full name
          example: James Gomez
        team_name:
          type: string
          description: The player's team name
          example: Horsens
        picture:
          type: string
          description: The player's url picture
          example: https://cdn.sportmonks.com/images/soccer/players/9/37418793.png
          format: URL
        position_num:
          type: string
          description: Player's position number
          example: 2
    team:
      required:
      - matches
      - team_id
      - team_manager
      - team_players
      type: object
      properties:
        team_id:
          type: string
          description: The team's id
        team_players:
          type: array
          description: The players of the favorite players
          items:
            $ref: '#/components/schemas/partial_player'
        matches:
          type: array
          description: The team's matches
          items:
            $ref: '#/components/schemas/match'
    partial_team:
      required:
      - team_id
      - team_logo
      - team_name
      type: object
      properties:
        team_id:
          type: string
          description: The team's id
          example: 2905
        team_name:
          type: string
          description: The team's name
          example: AGF
        team_logo:
          type: string
          description: The url of team's logo image
          example: https://cdn.sportmonks.com/images//soccer/teams/25/2905.png
          format: URL
    body:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: Must have 3-8 characters, letters only
          example: KingMessi
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: Must have 5-10 characters, should contain at least one digit and one special character
          format: password
          example: my*pass21
    role_list:
      type: object
      properties:
        roles:
          type: array
          description: The role list of the user
          example:
          - referee
          - union represntative
          - player
          items:
            type: string
    match_id:
      type: object
      properties:
        match_id:
          type: string
          description: must be unique match identitfier
          example: 1
    username:
      type: object
      properties:
        username:
          type: string
          example: KingMessi
          description: The username of the user to be assigned
    league_params:
      type: object
      properties:
        season_name:
          type: string
          description: current runnig season
          example: 2012/2013
        stage_name:
          type: string
          description: current runing fixture
          example: fixture 14
        match:
          $ref: '#/components/schemas/match'
    pre_post_matches:
      type: object
      properties:
        pre_played_matches:
          type: array
          description: pre played matches
          items:
            $ref: '#/components/schemas/match'
        post_played_matches:
          type: array
          description: post played matches
          items:
            $ref: '#/components/schemas/match'
    season_matches:
      type: object
      properties:
        season_matches:
          type: array
          description: all season matches
          items:
            $ref: '#/components/schemas/match'
    match_prop:
      type: object
      properties:
        home_team_name:
          type: string
          description: The home team name
          example: AGF
        away_team_name:
          type: string
          description: The away team name
          example: AaB
        date:
          type: string
          description: The date of the match
          format: date-time
          example: '2021-09-04T21:52:00'
        referee_name:
          type: string
          description: The referee name
          example: ref
    league_players:
      properties:
        search_player:
          type: array
          items:
            $ref: '#/components/schemas/partial_player'
    league_teams:
      properties:
        search_team:
          type: array
          items:
            $ref: '#/components/schemas/partial_team'
    
    score_prop:
      type: object
      properties:
        match_id:
          type: integer
          description: The match id
          example: 1
        score:
          type: string
          description: The score of the match to be added
          example: 3-0

    event_prop:
      type: object
      properties:
        match_id:
          type: integer
          description: The match id
          example: 1
        event:
          $ref: '#/components/schemas/event'

    
